{"ast":null,"code":"import React,{useState}from'react';import'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=_ref=>{let{onLoginSuccess}=_ref;const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const handleSubmit=async e=>{e.preventDefault();setError('');try{const response=await fetch('http://localhost:3001/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});const data=await response.json();if(response.ok){// 登录成功\nlocalStorage.setItem('token',data.token);// 保存 token\nlocalStorage.setItem('user',JSON.stringify(data.user));// 保存用户信息\nonLoginSuccess();// 通知父组件登录成功\n}else{// 登录失败\nsetError(data.message||'登录失败');}}catch(err){setError('网络错误，请稍后重试');console.error('登录错误:',err);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u767B\\u5F55\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u7528\\u6237\\u540D\",value:username,onChange:e=>setUsername(e.target.value),required:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u5BC6\\u7801\",value:password,onChange:e=>setPassword(e.target.value),required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\u767B\\u5F55\"})]})});};export default Login;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Login","_ref","onLoginSuccess","username","setUsername","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","user","message","err","console","className","children","onSubmit","type","placeholder","value","onChange","target","required"],"sources":["E:/cursor_edu/x-code/frontend/src/components/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ onLoginSuccess }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // 登录成功\r\n        localStorage.setItem('token', data.token); // 保存 token\r\n        localStorage.setItem('user', JSON.stringify(data.user)); // 保存用户信息\r\n        onLoginSuccess(); // 通知父组件登录成功\r\n      } else {\r\n        // 登录失败\r\n        setError(data.message || '登录失败');\r\n      }\r\n    } catch (err) {\r\n      setError('网络错误，请稍后重试');\r\n      console.error('登录错误:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>登录</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"用户名\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">登录</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAc,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,QAAQ,CAAC,EAAE,CAAC,CAEZ,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iCAAiC,CAAE,CAC9DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEf,QAAQ,CAAEE,QAAS,CAAC,CAC7C,CAAC,CAAC,CAEF,KAAM,CAAAc,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAElC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACf;AACAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,IAAI,CAACK,KAAK,CAAC,CAAE;AAC3CF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEN,IAAI,CAACC,SAAS,CAACC,IAAI,CAACM,IAAI,CAAC,CAAC,CAAE;AACzDvB,cAAc,CAAC,CAAC,CAAE;AACpB,CAAC,IAAM,CACL;AACAM,QAAQ,CAACW,IAAI,CAACO,OAAO,EAAI,MAAM,CAAC,CAClC,CACF,CAAE,MAAOC,GAAG,CAAE,CACZnB,QAAQ,CAAC,YAAY,CAAC,CACtBoB,OAAO,CAACrB,KAAK,CAAC,OAAO,CAAEoB,GAAG,CAAC,CAC7B,CACF,CAAC,CAED,mBACE9B,IAAA,QAAKgC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B/B,KAAA,SAAMgC,QAAQ,CAAEtB,YAAa,CAAAqB,QAAA,eAC3BjC,IAAA,OAAAiC,QAAA,CAAI,cAAE,CAAI,CAAC,CACVvB,KAAK,eAAIV,IAAA,QAAKgC,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEvB,KAAK,CAAM,CAAC,cACtDV,IAAA,QAAKgC,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBjC,IAAA,UACEmC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,oBAAK,CACjBC,KAAK,CAAE/B,QAAS,CAChBgC,QAAQ,CAAGzB,CAAC,EAAKN,WAAW,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,CACC,CAAC,cACNxC,IAAA,QAAKgC,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBjC,IAAA,UACEmC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,cAAI,CAChBC,KAAK,CAAE7B,QAAS,CAChB8B,QAAQ,CAAGzB,CAAC,EAAKJ,WAAW,CAACI,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,CACC,CAAC,cACNxC,IAAA,WAAQmC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,cAAE,CAAQ,CAAC,EAC7B,CAAC,CACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}